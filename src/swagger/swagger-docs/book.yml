paths:
  /book/{id}:
    get: # endpoint request type (get request)
      tags: # Tag property
        - Book            # Value of the tag
      summary: Get a book by id
      produces:
        - application/json
      parameters: # request parameters
        - in: path          # request body
          name: id     # name of request, can be any name
          description: It enables a user to get a book by its id
          required: true   # can also be true depending on user preference
          type: string
      responses: # server responses
        200:
          schema: # Schema definition
            $ref: '#/definitions/BookResponseModel'
          description: Got an object with book details
    put: # endpoint request type (post request)
      tags: # Tag property
        - Book            # Value of the tag
      summary: updates a book
      produces:
        - application/json
      parameters: # request parameters
        - in: path          # request body
          name: id     # name of request, can be any name
          description: It enables a user to get a book by its id
          required: true   # can also be true depending on user preference
          type: string
        - in: body          # request body
          name: updateBook     # name of request, can be any name
          description: It enables a user to update a book
          required: true   # can also be true depending on user preference
          schema: # Schema definition
            $ref: '#/definitions/BookRequestModel'
      responses: # server responses
        204:
          description: Updated an object with book details
    delete: # endpoint request type (post request)
      tags: # Tag property
        - Book            # Value of the tag
      summary: deletes a book
      produces:
        - application/json
      parameters: # request parameters
        - in: path          # request body
          name: id     # name of request, can be any name
          description: It enables a user to get a book by its id
          required: true   # can also be true depending on user preference
          type: string
      responses: # server responses
        204:
          description: Deleted an object with book details
  /book/: # path of the user from your endpoint
    post: # endpoint request type (post request)
      tags: # Tag property
        - Book            # Value of the tag
      summary: creates a new book
      produces:
        - application/json
      parameters: # request parameters
        - in: body          # request body
          name: createBook     # name of request, can be any name
          description: It enables a user to create a book
          required: true   # can also be true depending on user preference
          schema: # Schema definition
            $ref: '#/definitions/BookRequestModel'
      responses: # server responses
        201:
          description: Created an object with book details
          schema: # Schema definition
            $ref: '#/definitions/BookResponseModel'
    get: # endpoint request type (get request)
      tags: # Tag property
        - All Books            # Value of the tag
      summary: Get all books
      produces:
        - application/json
      responses: # server responses
        200:
          schema: # Schema definition
            type: array
            $ref: '#/definitions/BookResponseModel'
          description: Got all objects with book details
definitions: # Schema defination for request body
  BookRequestModel:
    type: object
    properties:
      name:
        type: string
  BookResponseModel:
    type: object
    properties:
      name:
        type: string
      id:
        type: string
